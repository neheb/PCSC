name: meson

on: [push, pull_request]

concurrency:
  group: ${{github.workflow}}-${{github.head_ref}}
  cancel-in-progress: true

jobs:
  Linux-GCC:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        cxx: ['7', '8', '9', '10', '11', '13']
    steps:
      - uses: actions/checkout@v4
      - uses: egor-tensin/setup-gcc@v1
        with:
          version: ${{matrix.cxx}}

      - name: Install packages
        run: |
          sudo apt install -y libudev-dev
          python3 -m pip install meson ninja

      - name: Compile and Test
        run: |
          meson setup "${{github.workspace}}/build" -Dwarning_level=3
          meson compile -C "${{github.workspace}}/build" --verbose
  Linux-Clang:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        cxx: ['6.0', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17']
    steps:
      - uses: actions/checkout@v4
      - uses: egor-tensin/setup-clang@v1

      - name: Install packages
        run: |
          python3 -m pip install meson ninja

      - name: Compile and Test
        env:
          CXXFLAGS: -stdlib=libc++
        run: |
          meson setup "${{github.workspace}}/build" -Dwarning_level=3
          meson compile -C "${{github.workspace}}/build" --verbose
  Cygwin:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v4
      - uses: msys2/setup-msys2@v2
        with:
          msystem: 'MSYS'
          install: >-
            flex
            gcc
            meson
            ninja
      - name: Compile and Test
        run: |
          meson setup build -Dwarning_level=3
          meson compile -C build --verbose
          meson test -C build --verbose
  MacOS:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install packages
        run: |
          brew install meson ninja

      - name: Compile and Test
        run: |
          meson setup "${{github.workspace}}/build" -Dwarning_level=3
          meson compile -C "${{github.workspace}}/build" --verbose
  DragonflyBSD:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: vmactions/dragonflybsd-vm@v1
        with:
          prepare: |
            pkg install -y ninja meson pkgconf perl
          run: |
            meson setup "${{github.workspace}}/build" -Dwarning_level=3
            meson compile -C "${{github.workspace}}/build" --verbose
            meson test -C "${{github.workspace}}/build" --verbose
  FreeBSD:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: vmactions/freebsd-vm@v1
        with:
          prepare: |
            pkg install -y ninja meson pkgconf perl
          run: |
            meson setup "${{github.workspace}}/build" -Dwarning_level=3
            meson compile -C "${{github.workspace}}/build" --verbose
            meson test -C "${{github.workspace}}/build" --verbose
  NetBSD:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: vmactions/netbsd-vm@v1
        with:
          release: '9.0'
          prepare: |
            /usr/sbin/pkg_add meson pkgconf perl
          run: |
            meson setup "${{github.workspace}}/build" -Dwarning_level=3
            meson compile -C "${{github.workspace}}/build" --verbose
            meson test -C "${{github.workspace}}/build" --verbose
  OpenBSD:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: vmactions/openbsd-vm@v1
        with:
          prepare: |
            pkg_add ninja meson pkgconf perl
          run: |
            meson setup "${{github.workspace}}/build" -Dwarning_level=3
            meson compile -C "${{github.workspace}}/build" --verbose
            meson test -C "${{github.workspace}}/build" --verbose
  Alpine:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: ['x86_64', 'x86', 'armhf', 'armv7', 'aarch64', 'ppc64le', 'riscv64', 's390x']
    defaults:
      run:
        shell: alpine.sh {0}
    steps:
      - uses: actions/checkout@v4
      - uses: jirutka/setup-alpine@v1
        with:
          branch: edge
          arch: ${{matrix.platform}}
          packages: >
            build-base flex-dev linux-headers perl pkgconf meson samurai
      - name: Compile and Test
        run: |
          meson setup "${{github.workspace}}/build" -Dwarning_level=3
          meson compile -C "${{github.workspace}}/build" --verbose
          meson test -C "${{github.workspace}}/build" --verbose
